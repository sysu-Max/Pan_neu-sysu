library(CellChat)
library(patchwork)
library(Seurat)
library(Matrix)
library(gridExtra)
library(ggplot2)
library(stringi)
library(ggthemes)
library(cowplot)
library(RColorBrewer)
library(pheatmap)
library(reshape2)
library(scales)
library(future)
library(parallel)
library(ggsci)
library(patchwork)
library(ROCR)
library(ggvenn)
library(cowplot)
library(tidyverse)
library(ggpubr)

setwd('~t/Project/pan_neu/2.analysis/4.merge_analysis/neu/analysis_v9/nichnet')

##-------- 
load(file = '~t/Project/pan_neu/2.analysis/4.merge_analysis/neu/analysis_v9/nichnet/merge_1000.RData')

list_37cluster <- c("B-c1-TCL1A", "B-c2-CD27",  "Plasma",
                    "Basophil","ECs", "Epi_malignant", "Epi_non-malignant", "GC", "LEC", 
                    "CAF-c1", "CAF-c2", "CAF-c3", "CD4-c1-GPR183", "CD4-c2-SELL", 
                    "CD4-c3-FPOX3", "CD4-c4-CXCL13", "CD4-c5-FGFBP2", "CD4-c6-IGF1R", 
                    "CD4-c7-IL17A", "CD8-c1-GZMK", "CD8-c2-ZNF683", "CD8-c3-LGA3", 
                    "CD8-c4-SLC4A10", "CD8-c5-DTHD1", "CD8-c6-MK167", "CD8-c7-FGFBP2", 
                    "NK-c1-FGFBP2", 
                    "NK-c2-CCL3", "NK-c3-CX3CR1", "NK-c4-ITGA1",
                    "DC-c1-CLEC10A", "DC-c2-CLEC9A", "DC-c3-LILRA4", "DC-c4-LAMP3", 
                    "Macrophage",  "Mast", "Mono-c1-CD14", "Mono-c1-FCGR3A")


## Read in NicheNet’s ligand-target prior model, ligand-receptor network and weighted integrated networks:
ligand_target_matrix = readRDS(file = '~/Project/pan_neu/2.analysis/4.merge_analysis/neu/analysis_v9/Nichenet/ligand_target_matrix_nsga2r_final.rds')
ligand_target_matrix[1:5,1:5] # target genes in rows, ligands in columns

lr_network = readRDS(file = '~/Project/pan_neu/2.analysis/4.merge_analysis/neu/analysis_v9/Nichenet/lr_network_human_21122021.rds')
head(lr_network)

weighted_networks = readRDS(file = '~/Project/pan_neu/2.analysis/4.merge_analysis/neu/analysis_v9/Nichenet/weighted_networks_nsga2r_final.rds')
weighted_networks_lr = weighted_networks$lr_sig %>% inner_join(lr_network, by = c("from","to"))

head(weighted_networks$lr_sig) # interactions and their weights in the ligand-receptor + signaling network
head(weighted_networks$gr) # interactions and their weights in the gene regulatory network

lr_network = lr_network %>% distinct(from, to)
ligand_target_matrix[1:5,1:5] # target genes in rows, ligands in columns
weighted_networks_lr = weighted_networks$lr_sig %>% inner_join(lr_network, by = c("from","to"))



## receiver
receiver = "Neutrophil"
Idents(merge_1000) <- merge_1000$first_annotation3
expressed_genes_receiver = get_expressed_genes(receiver,merge_1000, pct = 0.20)
background_expressed_genes = expressed_genes_receiver %>% .[. %in% rownames(ligand_target_matrix)]


# interesting gene
load(file ='~/Project/pan_neu/2.analysis/4.merge_analysis/neu/analysis_v9/Nichenet/MHC/target_ident.RData')

Idents(target_ident) <- target_ident$PDL1_id

condition_oi = "pos"
condition_reference = "nag"

DE_table_receiver = FindMarkers(object = target_ident, ident.1 = condition_oi, ident.2 = condition_reference, min.pct = 0.10) %>% rownames_to_column("gene")
geneset_oi = c(DE_table_receiver %>% filter(p_val_adj <= 0.05 & abs(avg_log2FC) >= 1.2) %>% pull(gene) ) %>% unique()

data_1 <- merge_1000
data_1 <- UpdateSeuratObject(data_1)

for (i in 1:38) {
  ## sender
  Idents(merge_1000) <- merge_1000$first_annotation3 
  sender_celltypes = list_37cluster[i]
  list_expressed_genes_sender = get_expressed_genes(sender_celltypes, merge_1000, pct = 0.20)
  expressed_genes_sender = list_expressed_genes_sender %>% unlist() %>% unique()
  
  # step.3 Define a set of potential ligands: these are ligands that are expressed by the “sender/niche” cell population and bind a (putative) receptor expressed by the “receiver/target” population
  ligands = lr_network %>% pull(from) %>% unique()
  receptors = lr_network %>% pull(to) %>% unique()
  
  expressed_ligands = intersect(ligands,expressed_genes_sender)
  expressed_receptors = intersect(receptors,expressed_genes_receiver)
  potential_ligands = lr_network %>% filter(from %in% expressed_ligands & to %in% expressed_receptors) %>% pull(from) %>% unique()
  
  # step.4 Perform NicheNet ligand activity analysis: rank the potential ligands based on the presence of their target genes in the gene set of interest (compared to the background set of genes)
  ligand_activities = predict_ligand_activities(geneset = geneset_oi, 
                                                background_expressed_genes = background_expressed_genes, 
                                                ligand_target_matrix = ligand_target_matrix, 
                                                potential_ligands = potential_ligands)
  
  best_upstream_ligands = ligand_activities %>% top_n(30, aupr_corrected) %>% arrange(-aupr_corrected) %>% pull(test_ligand) %>% unique()
  
  p = DotPlot(data_1, features = best_upstream_ligands, cols = "RdYlBu") + RotatedAxis()
  ggsave(str_glue("{sender_celltypes}_top30_ligands v2.png"), p, width = 12, height = 10,  bg = 'white')
  
  # step.5 Infer receptors and top-predicted target genes of ligands that are top-ranked in the ligand activity analysis
  active_ligand_target_links_df = best_upstream_ligands %>% 
    lapply(get_weighted_ligand_target_links,geneset = geneset_oi, ligand_target_matrix = ligand_target_matrix, n = 200) %>% 
    bind_rows() %>% 
    drop_na()
  
  active_ligand_target_links = prepare_ligand_target_visualization(ligand_target_df = active_ligand_target_links_df, ligand_target_matrix = ligand_target_matrix, cutoff = 0.33)
  
  order_ligands = intersect(best_upstream_ligands, colnames(active_ligand_target_links)) %>% rev() %>% make.names()
  order_targets = active_ligand_target_links_df$target %>% unique() %>% intersect(rownames(active_ligand_target_links)) %>% make.names()
  rownames(active_ligand_target_links) = rownames(active_ligand_target_links) %>% make.names() # make.names() for heatmap visualization of genes like H2-T23
  colnames(active_ligand_target_links) = colnames(active_ligand_target_links) %>% make.names() # make.names() for heatmap visualization of genes like H2-T23
  
  vis_ligand_target = active_ligand_target_links[order_targets,order_ligands] %>% t()
  
  p1 <- vis_ligand_target %>% 
    make_heatmap_ggplot("Prioritized ligands","Predicted target genes", color = "#e2575a",legend_position = "top", x_axis_position = "top",legend_title = "Regulatory potential")  + 
    theme(axis.text.x = element_text(face = "italic")) + scale_fill_gradient2(low = "whitesmoke",  high = "#e2575a")
  ggsave(str_glue("{sender_celltypes}_ligands to Predicted target genes v2.png"), p1, width = 6, height = 5,  bg = 'white')
  
  # Receptors of top-ranked ligands
  lr_network_top = lr_network %>% filter(from %in% best_upstream_ligands & to %in% expressed_receptors) %>% distinct(from,to)
  best_upstream_receptors = lr_network_top %>% pull(to) %>% unique()
  
  lr_network_top_df_large = weighted_networks_lr %>% filter(from %in% best_upstream_ligands & to %in% best_upstream_receptors)
  
  lr_network_top_df = lr_network_top_df_large %>% spread("from","weight",fill = 0)
  lr_network_top_matrix = lr_network_top_df %>% dplyr::select(-to) %>% as.matrix() %>% magrittr::set_rownames(lr_network_top_df$to)
  lr_network_top_matrix <- lr_network_top_matrix[,-c(1,2)]
  row_1 <- rownames(lr_network_top_matrix)
  lr_network_top_matrix <- apply(lr_network_top_matrix, 2, as.numeric)
  rownames(lr_network_top_matrix) <- row_1
  
  dist_receptors = dist(lr_network_top_matrix, method = "binary")
  hclust_receptors = hclust(dist_receptors, method = "ward.D2")
  order_receptors = hclust_receptors$labels[hclust_receptors$order]
  
  dist_ligands = dist(lr_network_top_matrix %>% t(), method = "binary")
  hclust_ligands = hclust(dist_ligands, method = "ward.D2")
  order_ligands_receptor = hclust_ligands$labels[hclust_ligands$order]
  
  order_receptors = order_receptors %>% intersect(rownames(lr_network_top_matrix))
  order_ligands_receptor = order_ligands_receptor %>% intersect(colnames(lr_network_top_matrix))
  
  vis_ligand_receptor_network = lr_network_top_matrix[order_receptors, order_ligands_receptor]
  rownames(vis_ligand_receptor_network) = order_receptors %>% make.names()
  colnames(vis_ligand_receptor_network) = order_ligands_receptor %>% make.names()
  
  p_ligand_receptor_network = vis_ligand_receptor_network %>% t() %>% 
    make_heatmap_ggplot("Ligands","Receptors", color = "mediumvioletred", x_axis_position = "top",legend_title = "Prior interaction potential")
  ggsave(str_glue("{sender_celltypes}_ligands to Receptors v2.png"), p_ligand_receptor_network, width = 6, height = 5,  bg = 'white')
  print(str_glue("{sender_celltypes}  is OK !!!"))
}





